<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.birlax.dbCommonUtils.mapper.StagingUtilMapper">

    <select id="createTempStageTable" resultType="String">
        CREATE TABLE ${tempTableName} AS SELECT
        <foreach collection="columnNames" item="item" index="index" open="" close="" separator=", ">
            ${item} 
        </foreach>
        FROM ${fullyQualifiedParentTableName} WHERE 1=2
        ;
    </select>

    <insert id="dummyStageRecords" parameterType="map">
        INSERT INTO ${tempTableName} (
        <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
            ${item}
        </foreach>
        <if test="jsonbColumnNames!=null and !jsonbColumnNames.isEmpty()">
            ,
            <foreach collection="jsonbColumnNames" item="item" index="index" open="" close="" separator=",">
                ${item}
            </foreach>
        </if>
        ) SELECT
        <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
            #{record.${item}} 
        </foreach>
        <if test="jsonbColumnNames!=null and !jsonbColumnNames.isEmpty()">
            ,
            <foreach collection="jsonbColumnNames" item="item" index="index" open="to_json(" close="::jsonb)::jsonb"
                separator=","> #{record.${item}} 
            </foreach>
        </if>
        ;
    </insert>

    <insert id="dummyStageRecordsInBulk" parameterType="map">
        INSERT INTO ${tempTableName} (
        <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
            ${item}
        </foreach>
        <if test="jsonbColumnNames!=null and !jsonbColumnNames.isEmpty()">
            ,
            <foreach collection="jsonbColumnNames" item="item" index="index" open="" close="" separator=",">
                ${item}
            </foreach>
        </if>
        ) values
        <foreach collection="records" item="record" separator="," open="" close="">
            (
            <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
                #{record.${item}} 
            </foreach>
            <if test="jsonbColumnNames!=null and !jsonbColumnNames.isEmpty()">
                ,
                <foreach collection="jsonbColumnNames" item="item" index="index" open="to_json(" close="::jsonb)::jsonb"
                    separator=","> #{record.${item}} 
                </foreach>
            </if>
            )
        </foreach>
        ;
    </insert>

    <insert id="dummyStageRecordsInBulkForMultipleBatches" parameterType="map">
        <foreach collection="batchesOfRecords" item="records" separator=";" open="" close=";">
            INSERT INTO ${tempTableName} (
            <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
                ${item}
            </foreach>
            <if test="jsonbColumnNames!=null and !jsonbColumnNames.isEmpty()">
                ,
                <foreach collection="jsonbColumnNames" item="item" index="index" open="" close="" separator=",">
                    ${item}
                </foreach>
            </if>
            ) values
            <foreach collection="records" item="record" separator="," open="" close="">
                (
                <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
                    #{record.${item}} 
                </foreach>
                <if test="jsonbColumnNames!=null and !jsonbColumnNames.isEmpty()">
                    ,
                    <foreach collection="jsonbColumnNames" item="item" index="index" open="to_json(" close="::jsonb)::jsonb"
                        separator=","> #{record.${item}} 
                    </foreach>
                </if>
                )
            </foreach>
        </foreach>
    </insert>

    <insert id="dummyStageRecordsUsingSqls" parameterType="map">
        <foreach collection="sqls" item="singleSql" index="index" separator=";" open="" close=";">
            ${singleSql}
        </foreach>
    </insert>

    <select id="getData" resultType="map">
        SELECT
        <foreach collection="columnNames" item="item" index="index" open="" close="" separator=", ">
            ${item}
        </foreach>
        FROM ${tempTableName} ;
    </select>

    <select id="dropTempTable" parameterType="String">
        DROP TABLE IF EXISTS ${tempTableName}; 
    </select>

    <select id="getColumnsDataType" parameterType="map" resultType="map">
        SELECT column_name
        , data_type
        FROM information_schema.columns
        WHERE 1=1
        AND table_schema = '${schema}'
        AND table_name = '${tableName}';
    </select>

</mapper>