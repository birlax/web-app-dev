<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.birlax.dbCommonUtils.SingleTemporalMapper">

    <select id="getAllRecords" parameterType="map" resultType="map">
        SELECT
        DISTINCT
        <foreach collection="retrieveColumns" item="item" index="index" open="" close="" separator=",">
            a.${item}
        </foreach>
        FROM ${mainTableName} a
        WHERE 1=1
    </select>

    <select id="searchRecords" parameterType="map" resultType="map">
        SELECT
        <foreach collection="filterByColumns" item="item" index="index" open="" close="" separator=",">
            a.${item}
        </foreach>
        <if test="retrieveColumns != null and !retrieveColumns.isEmpty()">
            ,
            <foreach collection="retrieveColumns" item="item" index="index" open="" close="" separator=",">
                a.${item}
            </foreach>
        </if>
        FROM ${mainTableName} a
        JOIN ${tempTableName} b
        ON 1=1
        AND
        <foreach collection="filterByColumns" item="item" index="index" open="" close="" separator="AND">
            ( (a.${item} = b.${item})  OR ( a.${item} IS NULL AND b.${item} IS NULL) )
        </foreach>
    </select>

    <select id="searchRecordsForDateRange" parameterType="map" resultType="map">
        SELECT
        <foreach collection="filterByColumns" item="item" index="index" open="" close="" separator=",">
            a.${item}
        </foreach>
        <if test="retrieveColumns != null and !retrieveColumns.isEmpty()">
            ,
            <foreach collection="retrieveColumns" item="item" index="index" open="" close="" separator=",">
                a.${item}
            </foreach>
        </if>
        FROM ${mainTableName} a
        JOIN ${tempTableName} b
        ON 1=1
        AND
        <foreach collection="filterByColumns" item="item" index="index" open="" close="" separator="AND">
            ( (a.${item} = b.${item})  OR ( a.${item} IS NULL AND b.${item} IS NULL) )
        </foreach>
        <if test="startDate !=null">
            AND a.${effectiveDateColName} &gt;= #{startDate}
        </if>
        <if test="endDate !=null">
            AND a.${effectiveDateColName} &lt; #{endDate}
        </if>
    </select>

    <select id="deleteRecords" resultType="map">
        DELETE
        FROM ${mainTableName} a
        USING ${tempTableName} b
        WHERE 1=1
        AND
        <foreach collection="columnNames" item="item" index="index" open="" close="" separator="AND">
            ( (a.${item} = b.${item})  OR ( a.${item} IS NULL AND b.${item} IS NULL) )
        </foreach>
        RETURNING a.*;
    </select>


    <select id="insertRecords" parameterType="map" resultType="map">
        INSERT INTO ${mainTableName} (
        <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
            ${item}
        </foreach>
        ) SELECT
        <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
            ${item}
        </foreach>
        FROM ${tempTableName}
        RETURNING id;
        ;
    </select>

    <insert id="dummyStageRecordsInBulk" parameterType="map">
        INSERT INTO ${tempTableName} (
        <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
            ${item}
        </foreach>
        <if test="jsonbColumnNames!=null and !jsonbColumnNames.isEmpty()">
            ,
            <foreach collection="jsonbColumnNames" item="item" index="index" open="" close="" separator=",">
                ${item}
            </foreach>
        </if>
        ) values
        <foreach collection="records" item="record" separator="," open="" close="">
            (
            <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
                #{record.${item}}
            </foreach>
            <if test="jsonbColumnNames!=null and !jsonbColumnNames.isEmpty()">
                ,
                <foreach collection="jsonbColumnNames" item="item" index="index" open="to_json(" close="::jsonb)::jsonb"
                         separator=",">#{record.${item}}
                </foreach>
            </if>
            )
        </foreach>
        ;
    </insert>

    <insert id="dummyStageRecordsInBulkForMultipleBatches" parameterType="map">
        <foreach collection="batchesOfRecords" item="records" separator=";" open="" close=";">
            INSERT INTO ${tempTableName} (
            <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
                ${item}
            </foreach>
            <if test="jsonbColumnNames!=null and !jsonbColumnNames.isEmpty()">
                ,
                <foreach collection="jsonbColumnNames" item="item" index="index" open="" close="" separator=",">
                    ${item}
                </foreach>
            </if>
            ) values
            <foreach collection="records" item="record" separator="," open="" close="">
                (
                <foreach collection="columnNames" item="item" index="index" open="" close="" separator=",">
                    #{record.${item}}
                </foreach>
                <if test="jsonbColumnNames!=null and !jsonbColumnNames.isEmpty()">
                    ,
                    <foreach collection="jsonbColumnNames" item="item" index="index" open="to_json(" close="::jsonb)::jsonb"
                             separator=",">#{record.${item}}
                    </foreach>
                </if>
                )
            </foreach>
        </foreach>
    </insert>

    <insert id="dummyStageRecordsUsingSqls" parameterType="map">
        <foreach collection="sqls" item="singleSql" index="index" separator=";" open="" close=";">
            ${singleSql}
        </foreach>
    </insert>

    <select id="getData" resultType="map">
        SELECT
        <foreach collection="columnNames" item="item" index="index" open="" close="" separator=", ">
            ${item}
        </foreach>
        FROM ${tempTableName} ;
    </select>

    <select id="dropTempTable" parameterType="String">
        DROP TABLE IF EXISTS ${tempTableName};
    </select>

    <select id="getColumnsDataType" parameterType="map" resultType="map">
        SELECT column_name
        , data_type
        FROM information_schema.columns
        WHERE 1=1
        AND table_schema = '${schema}'
        AND table_name = '${tableName}';
    </select>

</mapper>
